/**
Yoo bro what au looking for
Just deploy the bot with original repo

BMW MD

Made by dev Ibrahim Adams


                 _.u[[/;:,.         .odMMMMMM'
              .o888UU[[[/;:-.  .o@P^    MMM^
             oN88888UU[[[/;::-.        dP^
            dNMMNN888UU[[[/;:--.   .o@P^
           ,MMMMMMN888UU[[/;::-. o@^
           NNMMMNN888UU[[[/~.o@P^
           888888888UU[[[/o@^-..
          oI8888UU[[[/o@P^:--..
       .@^  YUU[[[/o@^;::---..
     oMP     ^/o@P^;:::---..
  .dMMM    .o@^ ^;::---...
 dMMMMMMM@^`       `^^^^
YMMMUP^

 Unclone version 😂🤣

 







































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































**/

'use strict';

var __createBinding = this && this.__createBinding || (Object.create ? function (_0x30bcd6, _0x415b25, _0xdcec0e, _0x57ffc8) {
  if (_0x57ffc8 === undefined) {
    _0x57ffc8 = _0xdcec0e;
  }
  var _0x54578d = Object.getOwnPropertyDescriptor(_0x415b25, _0xdcec0e);
  if (!_0x54578d || ('get' in _0x54578d ? !_0x415b25.__esModule : _0x54578d.writable || _0x54578d.configurable)) {
    _0x54578d = {
      'enumerable': true,
      'get': function () {
        return _0x415b25[_0xdcec0e];
      }
    };
  }
  Object.defineProperty(_0x30bcd6, _0x57ffc8, _0x54578d);
} : function (_0x342bd4, _0x28ffcc, _0x3ad006, _0x50e8f3) {
  if (_0x50e8f3 === undefined) {
    _0x50e8f3 = _0x3ad006;
  }
  _0x342bd4[_0x50e8f3] = _0x28ffcc[_0x3ad006];
});
var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (_0x39214b, _0x54263b) {
  Object.defineProperty(_0x39214b, "default", {
    'enumerable': true,
    'value': _0x54263b
  });
} : function (_0x1ce6b9, _0x46e822) {
  _0x1ce6b9["default"] = _0x46e822;
});
var __importStar = this && this.__importStar || function (_0x4f917a) {
  if (_0x4f917a && _0x4f917a.__esModule) {
    return _0x4f917a;
  }
  var _0x48249d = {};
  if (_0x4f917a != null) {
    for (var _0x70908b in _0x4f917a) if (_0x70908b !== "default" && Object.prototype.hasOwnProperty.call(_0x4f917a, _0x70908b)) {
      __createBinding(_0x48249d, _0x4f917a, _0x70908b);
    }
  }
  __setModuleDefault(_0x48249d, _0x4f917a);
  return _0x48249d;
};
var __importDefault = this && this.__importDefault || function (_0x3d6238) {
  return _0x3d6238 && _0x3d6238.__esModule ? _0x3d6238 : {
    'default': _0x3d6238
  };
};
Object.defineProperty(exports, "__esModule", {
  'value': true
});
const baileys_1 = __importStar(require('@whiskeysockets/baileys'));
const logger_1 = __importDefault(require("@whiskeysockets/baileys/lib/Utils/logger"));
const logger = logger_1["default"].child({});
logger.level = "silent";
const pino = require("pino");
const boom_1 = require("@hapi/boom");
const conf = require('./config');
let fs = require("fs-extra");
let path = require("path");
const FileType = require("file-type");
const {
  Sticker,
  createSticker,
  StickerTypes
} = require("wa-sticker-formatter");
const {
  verifierEtatJid,
  recupererActionJid
} = require("./lib/antilien");
const {
  atbverifierEtatJid,
  atbrecupererActionJid
} = require("./lib/antibot");
let evt = require(__dirname + "/Ibrahim/adams");
const {
  isUserBanned,
  addUserToBanList,
  removeUserFromBanList
} = require("./lib/banUser");
const {
  addGroupToBanList,
  isGroupBanned,
  removeGroupFromBanList
} = require("./lib/banGroup");
const {
  isGroupOnlyAdmin,
  addGroupToOnlyAdminList,
  removeGroupFromOnlyAdminList
} = require("./lib/onlyAdmin");
let {
  reagir
} = require(__dirname + "/Ibrahim/app");
var session = conf.session.replace(/Adams-2024;;;/g, '');
const prefixe = conf.PREFIXE;
async function authentification() {
  try {
    if (!fs.existsSync(__dirname + "/Session/creds.json")) {
      console.log("connexion en cour ...");
      await fs.writeFileSync(__dirname + "/Session/creds.json", atob(session), "utf8");
    } else if (fs.existsSync(__dirname + "/Session/creds.json") && session != "zokk") {
      await fs.writeFileSync(__dirname + "/Session/creds.json", atob(session), "utf8");
    }
  } catch (_0x2c7ac9) {
    console.log("Session Invalid " + _0x2c7ac9);
    return;
  }
}
authentification();
0x0;
const store = baileys_1.makeInMemoryStore({
  'logger': pino().child({
    'level': "silent",
    'stream': 'store'
  })
});
setTimeout(() => {
  async function _0x53cae9() {
    0x0;
    const {
      version: _0xc226cf,
      isLatest: _0x43ddf5
    } = await baileys_1.fetchLatestBaileysVersion();
    0x0;
    const {
      state: _0x4bfed7,
      saveCreds: _0x36d22e
    } = await baileys_1.useMultiFileAuthState(__dirname + "/Session");
    0x0;
    const _0x52e048 = {
      'version': _0xc226cf,
      'logger': pino({
        'level': "silent"
      }),
      'browser': ["Bmw-Md", "safari", "1.0.0"],
      'printQRInTerminal': true,
      'fireInitQueries': false,
      'shouldSyncHistoryMessage': true,
      'downloadHistory': true,
      'syncFullHistory': true,
      'generateHighQualityLinkPreview': true,
      'markOnlineOnConnect': false,
      'keepAliveIntervalMs': 0x7530,
      'auth': {
        'creds': _0x4bfed7.creds,
        'keys': baileys_1.makeCacheableSignalKeyStore(_0x4bfed7.keys, logger)
      },
      'getMessage': async _0x53afc2 => {
        if (store) {
          const _0xd5241f = await store.loadMessage(_0x53afc2.remoteJid, _0x53afc2.id, undefined);
          return _0xd5241f.message || undefined;
        }
        return {
          'conversation': "An Error Occurred, Repeat Command!"
        };
      }
    };
    0x0;
    const _0x478a94 = baileys_1["default"](_0x52e048);
    store.bind(_0x478a94.ev);
    setInterval(() => {
      store.writeToFile("store.json");
    }, 0xbb8);
    _0x478a94.ev.on("messages.upsert", async _0x26181b => {
      const {
        messages: _0x249aae
      } = _0x26181b;
      const _0x28338e = _0x249aae[0x0];
      if (!_0x28338e.message) {
        return;
      }
      const _0x3f06b7 = _0x4dbdcb => {
        if (!_0x4dbdcb) {
          return _0x4dbdcb;
        }
        if (/:\d+@/gi.test(_0x4dbdcb)) {
          0x0;
          let _0x27b355 = baileys_1.jidDecode(_0x4dbdcb) || {};
          return _0x27b355.user && _0x27b355.server && _0x27b355.user + '@' + _0x27b355.server || _0x4dbdcb;
        } else {
          return _0x4dbdcb;
        }
      };
      0x0;
      var _0x10206b = baileys_1.getContentType(_0x28338e.message);
      var _0x1ebfd5 = _0x10206b == "conversation" ? _0x28338e.message.conversation : _0x10206b == "imageMessage" ? _0x28338e.message.imageMessage?.['caption'] : _0x10206b == "videoMessage" ? _0x28338e.message.videoMessage?.["caption"] : _0x10206b == "extendedTextMessage" ? _0x28338e.message?.["extendedTextMessage"]?.["text"] : _0x10206b == "buttonsResponseMessage" ? _0x28338e?.["message"]?.["buttonsResponseMessage"]?.["selectedButtonId"] : _0x10206b == "listResponseMessage" ? _0x28338e.message?.["listResponseMessage"]?.['singleSelectReply']?.['selectedRowId'] : _0x10206b == "messageContextInfo" ? _0x28338e?.["message"]?.["buttonsResponseMessage"]?.["selectedButtonId"] || _0x28338e.message?.['listResponseMessage']?.['singleSelectReply']?.["selectedRowId"] || _0x28338e.text : '';
      var _0x462b88 = _0x28338e.key.remoteJid;
      var _0x28c0b1 = _0x3f06b7(_0x478a94.user.id);
      var _0x5e4950 = _0x28c0b1.split('@')[0x0];
      const _0x4a7fc7 = _0x462b88?.["endsWith"]('@g.us');
      var _0x9bcca2 = _0x4a7fc7 ? await _0x478a94.groupMetadata(_0x462b88) : '';
      var _0x33f17c = _0x4a7fc7 ? _0x9bcca2.subject : '';
      var _0x25cd06 = _0x28338e.message.extendedTextMessage?.["contextInfo"]?.["quotedMessage"];
      var _0x1e5583 = _0x3f06b7(_0x28338e.message?.["extendedTextMessage"]?.["contextInfo"]?.["participant"]);
      var _0x2dae08 = _0x4a7fc7 ? _0x28338e.key.participant ? _0x28338e.key.participant : _0x28338e.participant : _0x462b88;
      if (_0x28338e.key.fromMe) {
        _0x2dae08 = _0x28c0b1;
      }
      var _0x279122 = _0x4a7fc7 ? _0x28338e.key.participant : '';
      const {
        getAllSudoNumbers: _0x147ae8
      } = require('./lib/sudo');
      const _0x2511d0 = _0x28338e.pushName;
      const _0x517a55 = await _0x147ae8();
      const _0x443be2 = [_0x5e4950, "254710772666", "254710772666", "254710772666", '254710772666', conf.NUMERO_OWNER].map(_0x5ae6ec => _0x5ae6ec.replace(/[^0-9]/g) + "@s.whatsapp.net");
      const _0x3d3b80 = _0x443be2.concat(_0x517a55);
      const _0x1fd3ea = _0x3d3b80.includes(_0x2dae08);
      var _0x447b53 = ["254710772666", "254710772666", "254710772666", '254710772666'].map(_0x7e14db => _0x7e14db.replace(/[^0-9]/g) + "@s.whatsapp.net").includes(_0x2dae08);
      function _0x4d9c13(_0x76d73a) {
        _0x478a94.sendMessage(_0x462b88, {
          'text': _0x76d73a
        }, {
          'quoted': _0x28338e
        });
      }
      console.log("\t🌍BMW-MD ONLINE🌍");
      console.log("=========== written message===========");
      if (_0x4a7fc7) {
        console.log("message provenant du groupe : " + _0x33f17c);
      }
      console.log("message envoyé par : [" + _0x2511d0 + " : " + _0x2dae08.split('@s.whatsapp.net')[0x0] + " ]");
      console.log("type de message : " + _0x10206b);
      console.log("------ message ------");
      console.log(_0x1ebfd5);
      function _0x372881(_0x5818de) {
        let _0x29b8fd = [];
        for (_0x26181b of _0x5818de) {
          if (_0x26181b.admin == null) {
            continue;
          }
          _0x29b8fd.push(_0x26181b.id);
        }
        return _0x29b8fd;
      }
      var _0x50d36d = conf.ETAT;
      if (_0x50d36d == 0x1) {
        await _0x478a94.sendPresenceUpdate("available", _0x462b88);
      } else {
        if (_0x50d36d == 0x2) {
          await _0x478a94.sendPresenceUpdate("composing", _0x462b88);
        } else if (_0x50d36d == 0x3) {
          await _0x478a94.sendPresenceUpdate("recording", _0x462b88);
        } else {
          await _0x478a94.sendPresenceUpdate("unavailable", _0x462b88);
        }
      }
      const _0x12bfb6 = _0x4a7fc7 ? await _0x9bcca2.participants : '';
      let _0x3f52a4 = _0x4a7fc7 ? _0x372881(_0x12bfb6) : '';
      const _0x394f9e = _0x4a7fc7 ? _0x3f52a4.includes(_0x2dae08) : false;
      var _0x27956a = _0x4a7fc7 ? _0x3f52a4.includes(_0x28c0b1) : false;
      const _0x2e6e91 = _0x1ebfd5 ? _0x1ebfd5.trim().split(/ +/).slice(0x1) : null;
      const _0x14fab1 = _0x1ebfd5 ? _0x1ebfd5.startsWith(prefixe) : false;
      const _0x3ac0e7 = _0x14fab1 ? _0x1ebfd5.slice(0x1).trim().split(/ +/).shift().toLowerCase() : false;
      const _0x90403f = conf.URL.split(',');
      function _0x59befd() {
        const _0x27c63e = Math.floor(Math.random() * _0x90403f.length);
        const _0x1eb1e1 = _0x90403f[_0x27c63e];
        return _0x1eb1e1;
      }
      var _0x198031 = {
        'superUser': _0x1fd3ea,
        'dev': _0x447b53,
        'verifGroupe': _0x4a7fc7,
        'mbre': _0x12bfb6,
        'membreGroupe': _0x279122,
        'verifAdmin': _0x394f9e,
        'infosGroupe': _0x9bcca2,
        'nomGroupe': _0x33f17c,
        'auteurMessage': _0x2dae08,
        'nomAuteurMessage': _0x2511d0,
        'idBot': _0x28c0b1,
        'verifZokouAdmin': _0x27956a,
        'prefixe': prefixe,
        'arg': _0x2e6e91,
        'repondre': _0x4d9c13,
        'mtype': _0x10206b,
        'groupeAdmin': _0x372881,
        'msgRepondu': _0x25cd06,
        'auteurMsgRepondu': _0x1e5583,
        'ms': _0x28338e,
        'mybotpic': _0x59befd
      };
      if (_0x18215e === _0x79eeda && conf.AUTOREAD_MESSAGES === 'yes') {
        _0x29ce6c.readMessages([_0x19bc4f.key]);
      }
      if (!_0x545f4b && _0x18215e === _0x79eeda && conf.A_REACT === 'yes') {
        const _0x89fbdb = ['❤', '💕', '😻', '🧡', '💛', '💚', '💙', '💜', '🖤', '❣', '💞', '💓', '💗', '💖', '💘', '💝', '💟', '♥', '💌', '🙂', '🤗', '😌', '😉', '🤗', '😊', '🎊', '🎉', '🎁', '🎈', '👋'];
        const _0x28b750 = _0x89fbdb[Math.floor(Math.random() * _0x89fbdb.length)];
        _0x29ce6c.sendMessage(_0x18215e, {
          'react': {
            'text': _0x28b750,
            'key': _0x19bc4f.key
          }
        });
      }
      if (_0x18215e === _0x79eeda && conf.CHATBOT === 'yes') {
        const _0x485c4d = await fetch("http://api.brainshop.ai/get?bid=181821&key=ltFzFIXrtj2SVMTX&uid=[uid]&msg=" + _0x5df310);
        const _0x4042b7 = await _0x485c4d.json();
        await _0x9fe7a5(_0x4042b7.cnt);
      }
      if (_0x19bc4f.message.protocolMessage && _0x19bc4f.message.protocolMessage.type === 0x0 && conf.ADM === 'yes') {
        if (_0x19bc4f.key.fromMe || _0x19bc4f.message.protocolMessage.key.fromMe) {
          console.log("Delete message about me");
          return;
        }
        console.log("Message supprimer");
        let _0x2b6461 = _0x19bc4f.message.protocolMessage.key;
        try {
          const _0x6f5a1d = fs.readFileSync("./store.json", "utf8");
          const _0x11636e = JSON.parse(_0x6f5a1d);
          let _0xde0898 = _0x11636e.messages[_0x2b6461.remoteJid];
          let _0x3bfe6f;
          for (let _0x1b2e1f = 0x0; _0x1b2e1f < _0xde0898.length; _0x1b2e1f++) {
            if (_0xde0898[_0x1b2e1f].key.id === _0x2b6461.id) {
              _0x3bfe6f = _0xde0898[_0x1b2e1f];
              break;
            }
          }
          if (_0x3bfe6f === null || !_0x3bfe6f || _0x3bfe6f === "undefined") {
            console.log("Message not found");
            return;
          }
          await _0x29ce6c.sendMessage(_0x3d5b12, {
            'image': {
              'url': "./files/deleted-message.jpg"
            },
            'caption': "        😈Anti-delete-message😈\n Message from @" + _0x3bfe6f.key.participant.split('@')[0x0] + '​',
            'mentions': [_0x3bfe6f.key.participant]
          }).then(() => {
            _0x29ce6c.sendMessage(_0x3d5b12, {
              'forward': _0x3bfe6f
            }, {
              'quoted': _0x3bfe6f
            });
          });
        } catch (_0x9d5c82) {
          console.log(_0x9d5c82);
        }
      }
      if (_0x28338e.key && _0x28338e.key.remoteJid === "status@broadcast" && conf.AUTO_READ_STATUS === "yes") {
        await _0x478a94.readMessages([_0x28338e.key]);
      }
      if (_0x28338e.key && _0x28338e.key.remoteJid === 'status@broadcast' && conf.AUTO_DOWNLOAD_STATUS === 'yes') {
        if (_0x28338e.message.extendedTextMessage) {
          var _0x15086d = _0x28338e.message.extendedTextMessage.text;
          await _0x478a94.sendMessage(_0x28c0b1, {
            'text': _0x15086d
          }, {
            'quoted': _0x28338e
          });
        } else {
          if (_0x28338e.message.imageMessage) {
            var _0x2b98e9 = _0x28338e.message.imageMessage.caption;
            var _0x53cc32 = await _0x478a94.downloadAndSaveMediaMessage(_0x28338e.message.imageMessage);
            await _0x478a94.sendMessage(_0x28c0b1, {
              'image': {
                'url': _0x53cc32
              },
              'caption': _0x2b98e9
            }, {
              'quoted': _0x28338e
            });
          } else {
            if (_0x28338e.message.videoMessage) {
              var _0x2b98e9 = _0x28338e.message.videoMessage.caption;
              var _0x46b54d = await _0x478a94.downloadAndSaveMediaMessage(_0x28338e.message.videoMessage);
              await _0x478a94.sendMessage(_0x28c0b1, {
                'video': {
                  'url': _0x46b54d
                },
                'caption': _0x2b98e9
              }, {
                'quoted': _0x28338e
              });
            }
          }
        }
      }
      if (!_0x447b53 && _0x462b88 == "120363158701337904@g.us") {
        return;
      }
      if (_0x1ebfd5 && _0x2dae08.endsWith("s.whatsapp.net")) {
        const {
          ajouterOuMettreAJourUserData: _0x2aa859
        } = require("./lib/level");
        try {
          await _0x2aa859(_0x2dae08);
        } catch (_0x59c604) {
          console.error(_0x59c604);
        }
      }
      try {
        if (_0x28338e.message[_0x10206b].contextInfo.mentionedJid && (_0x28338e.message[_0x10206b].contextInfo.mentionedJid.includes(_0x28c0b1) || _0x28338e.message[_0x10206b].contextInfo.mentionedJid.includes(conf.NUMERO_OWNER + "@s.whatsapp.net"))) {
          if (_0x462b88 == '120363158701337904@g.us') {
            return;
          }
          ;
          if (_0x1fd3ea) {
            console.log("hummm");
            return;
          }
          let _0x19c110 = require("./lib/mention");
          let _0x1fc516 = await _0x19c110.recupererToutesLesValeurs();
          let _0x2df168 = _0x1fc516[0x0];
          if (_0x2df168.status === "non") {
            console.log("mention pas actifs");
            return;
          }
          let _0x129fd6;
          if (_0x2df168.type.toLocaleLowerCase() === 'image') {
            _0x129fd6 = {
              'image': {
                'url': _0x2df168.url
              },
              'caption': _0x2df168.message
            };
          } else {
            if (_0x2df168.type.toLocaleLowerCase() === "video") {
              _0x129fd6 = {
                'video': {
                  'url': _0x2df168.url
                },
                'caption': _0x2df168.message
              };
            } else {
              if (_0x2df168.type.toLocaleLowerCase() === 'sticker') {
                let _0x3a2b5a = new Sticker(_0x2df168.url, {
                  'pack': conf.NOM_OWNER,
                  'type': StickerTypes.FULL,
                  'categories': ['🤩', '🎉'],
                  'id': '12345',
                  'quality': 0x46,
                  'background': 'transparent'
                });
                const _0x53294e = await _0x3a2b5a.toBuffer();
                _0x129fd6 = {
                  'sticker': _0x53294e
                };
              } else if (_0x2df168.type.toLocaleLowerCase() === "audio") {
                _0x129fd6 = {
                  'audio': {
                    'url': _0x2df168.url
                  },
                  'mimetype': "audio/mp4"
                };
              }
            }
          }
          _0x478a94.sendMessage(_0x462b88, _0x129fd6, {
            'quoted': _0x28338e
          });
        }
      } catch (_0x1e006e) {}
      try {
        const _0x217530 = await verifierEtatJid(_0x462b88);
        if (_0x1ebfd5.includes("https://") && _0x4a7fc7 && _0x217530) {
          console.log("lien detecté");
          var _0x221c5c = _0x4a7fc7 ? _0x3f52a4.includes(_0x28c0b1) : false;
          if (_0x1fd3ea || _0x394f9e || !_0x221c5c) {
            console.log("je fais rien");
            return;
          }
          ;
          const _0x29f554 = {
            'remoteJid': _0x462b88,
            'fromMe': false,
            'id': _0x28338e.key.id,
            'participant': _0x2dae08
          };
          var _0x2037dd = "lien detected, \n";
          var _0x1b93a0 = new Sticker("https://raw.githubusercontent.com/djalega8000/Zokou-MD/main/media/remover.gif", {
            'pack': "BMW-Md",
            'author': conf.OWNER_NAME,
            'type': StickerTypes.FULL,
            'categories': ['🤩', '🎉'],
            'id': "12345",
            'quality': 0x32,
            'background': '#000000'
          });
          await _0x1b93a0.toFile("st1.webp");
          var _0x83663a = await recupererActionJid(_0x462b88);
          if (_0x83663a === "remove") {
            _0x2037dd += "message deleted \n @" + _0x2dae08.split('@')[0x0] + " removed from group.";
            await _0x478a94.sendMessage(_0x462b88, {
              'sticker': fs.readFileSync("st1.webp")
            });
            0x0;
            baileys_1.delay(0x320);
            await _0x478a94.sendMessage(_0x462b88, {
              'text': _0x2037dd,
              'mentions': [_0x2dae08]
            }, {
              'quoted': _0x28338e
            });
            try {
              await _0x478a94.groupParticipantsUpdate(_0x462b88, [_0x2dae08], "remove");
            } catch (_0x1063e8) {
              console.log("antiien ") + _0x1063e8;
            }
            await _0x478a94.sendMessage(_0x462b88, {
              'delete': _0x29f554
            });
            await fs.unlink("st1.webp");
          } else {
            if (_0x83663a === "delete") {
              _0x2037dd += "message deleted \n @" + _0x2dae08.split('@')[0x0] + " avoid sending link.";
              await _0x478a94.sendMessage(_0x462b88, {
                'text': _0x2037dd,
                'mentions': [_0x2dae08]
              }, {
                'quoted': _0x28338e
              });
              await _0x478a94.sendMessage(_0x462b88, {
                'delete': _0x29f554
              });
              await fs.unlink('st1.webp');
            } else {
              if (_0x83663a === "warn") {
                const {
                  getWarnCountByJID: _0x589759,
                  ajouterUtilisateurAvecWarnCount: _0x233da9
                } = require("./lib/warn");
                let _0x4814af = await _0x589759(_0x2dae08);
                let _0x23c823 = conf.WARN_COUNT;
                if (_0x4814af >= _0x23c823) {
                  var _0xee95cf = "link detected , you will be remove because of reaching warn-limit";
                  await _0x478a94.sendMessage(_0x462b88, {
                    'text': _0xee95cf,
                    'mentions': [_0x2dae08]
                  }, {
                    'quoted': _0x28338e
                  });
                  await _0x478a94.groupParticipantsUpdate(_0x462b88, [_0x2dae08], "remove");
                  await _0x478a94.sendMessage(_0x462b88, {
                    'delete': _0x29f554
                  });
                } else {
                  var _0xb8a515 = _0x23c823 - _0x4814af;
                  var _0x28bcc4 = "Link detected , your warn_count was upgrade ;\n rest : " + _0xb8a515 + " ";
                  await _0x233da9(_0x2dae08);
                  await _0x478a94.sendMessage(_0x462b88, {
                    'text': _0x28bcc4,
                    'mentions': [_0x2dae08]
                  }, {
                    'quoted': _0x28338e
                  });
                  await _0x478a94.sendMessage(_0x462b88, {
                    'delete': _0x29f554
                  });
                }
              }
            }
          }
        }
      } catch (_0x11bd71) {
        console.log("lib err " + _0x11bd71);
      }
      try {
        const _0x11ef08 = _0x28338e.key?.['id']?.['startsWith']('BAES') && _0x28338e.key?.['id']?.["length"] === 0x10;
        const _0x1b7b7 = _0x28338e.key?.['id']?.["startsWith"]("BAE5") && _0x28338e.key?.['id']?.["length"] === 0x10;
        if (_0x11ef08 || _0x1b7b7) {
          if (_0x10206b === "reactionMessage") {
            console.log("Je ne reagis pas au reactions");
            return;
          }
          ;
          const _0x1aad24 = await atbverifierEtatJid(_0x462b88);
          if (!_0x1aad24) {
            return;
          }
          ;
          if (_0x394f9e || _0x2dae08 === _0x28c0b1) {
            console.log("je fais rien");
            return;
          }
          ;
          const _0x7cb84f = {
            'remoteJid': _0x462b88,
            'fromMe': false,
            'id': _0x28338e.key.id,
            'participant': _0x2dae08
          };
          var _0x2037dd = "bot detected, \n";
          var _0x1b93a0 = new Sticker("https://raw.githubusercontent.com/djalega8000/Zokou-MD/main/media/remover.gif", {
            'pack': "Bmw-Md",
            'author': conf.OWNER_NAME,
            'type': StickerTypes.FULL,
            'categories': ['🤩', '🎉'],
            'id': "12345",
            'quality': 0x32,
            'background': "#000000"
          });
          await _0x1b93a0.toFile("st1.webp");
          var _0x83663a = await atbrecupererActionJid(_0x462b88);
          if (_0x83663a === "remove") {
            _0x2037dd += "message deleted \n @" + _0x2dae08.split('@')[0x0] + " removed from group.";
            await _0x478a94.sendMessage(_0x462b88, {
              'sticker': fs.readFileSync("st1.webp")
            });
            0x0;
            baileys_1.delay(0x320);
            await _0x478a94.sendMessage(_0x462b88, {
              'text': _0x2037dd,
              'mentions': [_0x2dae08]
            }, {
              'quoted': _0x28338e
            });
            try {
              await _0x478a94.groupParticipantsUpdate(_0x462b88, [_0x2dae08], "remove");
            } catch (_0x509344) {
              console.log("antibot ") + _0x509344;
            }
            await _0x478a94.sendMessage(_0x462b88, {
              'delete': _0x7cb84f
            });
            await fs.unlink("st1.webp");
          } else {
            if (_0x83663a === "delete") {
              _0x2037dd += "message delete \n @" + _0x2dae08.split('@')[0x0] + " Avoid sending link.";
              await _0x478a94.sendMessage(_0x462b88, {
                'text': _0x2037dd,
                'mentions': [_0x2dae08]
              }, {
                'quoted': _0x28338e
              });
              await _0x478a94.sendMessage(_0x462b88, {
                'delete': _0x7cb84f
              });
              await fs.unlink('st1.webp');
            } else {
              if (_0x83663a === "warn") {
                const {
                  getWarnCountByJID: _0x24bd58,
                  ajouterUtilisateurAvecWarnCount: _0x31fc37
                } = require('./lib/warn');
                let _0x4039f9 = await _0x24bd58(_0x2dae08);
                let _0x4eba64 = conf.WARN_COUNT;
                if (_0x4039f9 >= _0x4eba64) {
                  var _0xee95cf = "bot detected ;you will be remove because of reaching warn-limit";
                  await _0x478a94.sendMessage(_0x462b88, {
                    'text': _0xee95cf,
                    'mentions': [_0x2dae08]
                  }, {
                    'quoted': _0x28338e
                  });
                  await _0x478a94.groupParticipantsUpdate(_0x462b88, [_0x2dae08], 'remove');
                  await _0x478a94.sendMessage(_0x462b88, {
                    'delete': _0x7cb84f
                  });
                } else {
                  var _0xb8a515 = _0x4eba64 - _0x4039f9;
                  var _0x28bcc4 = "bot detected , your warn_count was upgrade ;\n rest : " + _0xb8a515 + " ";
                  await _0x31fc37(_0x2dae08);
                  await _0x478a94.sendMessage(_0x462b88, {
                    'text': _0x28bcc4,
                    'mentions': [_0x2dae08]
                  }, {
                    'quoted': _0x28338e
                  });
                  await _0x478a94.sendMessage(_0x462b88, {
                    'delete': _0x7cb84f
                  });
                }
              }
            }
          }
        }
      } catch (_0x14d29b) {
        console.log(".... " + _0x14d29b);
      }
      if (_0x14fab1) {
        const _0x48df45 = evt.cm.find(_0x50a619 => _0x50a619.nomCom === _0x3ac0e7);
        if (_0x48df45) {
          try {
            if (conf.MODE.toLocaleLowerCase() != "yes" && !_0x1fd3ea) {
              return;
            }
            if (!_0x1fd3ea && _0x462b88 === _0x2dae08 && conf.PM_PERMIT === 'yes') {
              _0x4d9c13("You don't have acces to commands here");
              return;
            }
            if (!_0x1fd3ea && _0x4a7fc7) {
              let _0x83c04f = await isGroupBanned(_0x462b88);
              if (_0x83c04f) {
                return;
              }
            }
            if (!_0x394f9e && _0x4a7fc7) {
              let _0x2e5172 = await isGroupOnlyAdmin(_0x462b88);
              if (_0x2e5172) {
                return;
              }
            }
            if (!_0x1fd3ea) {
              let _0x585895 = await isUserBanned(_0x2dae08);
              if (_0x585895) {
                _0x4d9c13("You are banned from bot commands");
                return;
              }
            }
            reagir(_0x462b88, _0x478a94, _0x28338e, _0x48df45.reaction);
            _0x48df45.fonction(_0x462b88, _0x478a94, _0x198031);
          } catch (_0x14e6f8) {
            console.log("😡😡 " + _0x14e6f8);
            _0x478a94.sendMessage(_0x462b88, {
              'text': "😡😡 " + _0x14e6f8
            }, {
              'quoted': _0x28338e
            });
          }
        }
      }
    });
    const {
      recupevents: _0x42de04
    } = require("./lib/welcome");
    _0x478a94.ev.on('group-participants.update', async _0x5912ce => {
      console.log(_0x5912ce);
      let _0x5060e1;
      try {
        _0x5060e1 = await _0x478a94.profilePictureUrl(_0x5912ce.id, 'image');
      } catch {
        _0x5060e1 = '';
      }
      try {
        const _0x16debc = await _0x478a94.groupMetadata(_0x5912ce.id);
        if (_0x5912ce.action == "add" && (await _0x42de04(_0x5912ce.id, 'welcome')) == 'on') {
          let _0x30c90f = "*BMW MD WELCOME MESSAGE*";
          let _0x34e17c = _0x5912ce.participants;
          for (let _0x1648ea of _0x34e17c) {
            _0x30c90f += " \n❒ *Hey* 🖐️ @" + _0x1648ea.split('@')[0x0] + " WELCOME TO OUR GROUP. \n\n";
          }
          _0x30c90f += "❒ *READ THE GROUP DESCRIPTION TO AVOID GETTING REMOVED* ";
          _0x478a94.sendMessage(_0x5912ce.id, {
            'image': {
              'url': _0x5060e1
            },
            'caption': _0x30c90f,
            'mentions': _0x34e17c
          });
        } else {
          if (_0x5912ce.action == 'remove' && (await _0x42de04(_0x5912ce.id, "goodbye")) == 'on') {
            let _0x29535e = "one or somes member(s) left group;\n";
            let _0x5b8b09 = _0x5912ce.participants;
            for (let _0xe066b8 of _0x5b8b09) {
              _0x29535e += '@' + _0xe066b8.split('@')[0x0] + "\n";
            }
            _0x478a94.sendMessage(_0x5912ce.id, {
              'text': _0x29535e,
              'mentions': _0x5b8b09
            });
          } else {
            if (_0x5912ce.action == "promote" && (await _0x42de04(_0x5912ce.id, 'antipromote')) == 'on') {
              if (_0x5912ce.author == _0x16debc.owner || _0x5912ce.author == conf.NUMERO_OWNER + "@s.whatsapp.net" || _0x5912ce.author == decodeJid(_0x478a94.user.id) || _0x5912ce.author == _0x5912ce.participants[0x0]) {
                console.log("Cas de superUser je fais rien");
                return;
              }
              ;
              await _0x478a94.groupParticipantsUpdate(_0x5912ce.id, [_0x5912ce.author, _0x5912ce.participants[0x0]], "demote");
              _0x478a94.sendMessage(_0x5912ce.id, {
                'text': '@' + _0x5912ce.author.split('@')[0x0] + " has violated the anti-promotion rule, therefore both " + _0x5912ce.author.split('@')[0x0] + " and @" + _0x5912ce.participants[0x0].split('@')[0x0] + " have been removed from administrative rights.",
                'mentions': [_0x5912ce.author, _0x5912ce.participants[0x0]]
              });
            } else {
              if (_0x5912ce.action == "demote" && (await _0x42de04(_0x5912ce.id, "antidemote")) == 'on') {
                if (_0x5912ce.author == _0x16debc.owner || _0x5912ce.author == conf.NUMERO_OWNER + '@s.whatsapp.net' || _0x5912ce.author == decodeJid(_0x478a94.user.id) || _0x5912ce.author == _0x5912ce.participants[0x0]) {
                  console.log("Cas de superUser je fais rien");
                  return;
                }
                ;
                await _0x478a94.groupParticipantsUpdate(_0x5912ce.id, [_0x5912ce.author], 'demote');
                await _0x478a94.groupParticipantsUpdate(_0x5912ce.id, [_0x5912ce.participants[0x0]], "promote");
                _0x478a94.sendMessage(_0x5912ce.id, {
                  'text': '@' + _0x5912ce.author.split('@')[0x0] + " has violated the anti-demotion rule by removing @" + _0x5912ce.participants[0x0].split('@')[0x0] + ". Consequently, he has been stripped of administrative rights.",
                  'mentions': [_0x5912ce.author, _0x5912ce.participants[0x0]]
                });
              }
            }
          }
        }
      } catch (_0x5074ed) {
        console.error(_0x5074ed);
      }
    });
    async function _0x4d905a() {
      const _0x3793d7 = require("node-cron");
      const {
        getCron: _0x1f414d
      } = require("./lib/cron");
      let _0x5989f9 = await _0x1f414d();
      console.log(_0x5989f9);
      if (_0x5989f9.length > 0x0) {
        for (let _0x2874d7 = 0x0; _0x2874d7 < _0x5989f9.length; _0x2874d7++) {
          if (_0x5989f9[_0x2874d7].mute_at != null) {
            let _0x278548 = _0x5989f9[_0x2874d7].mute_at.split(':');
            console.log("etablissement d'un automute pour " + _0x5989f9[_0x2874d7].group_id + " a " + _0x278548[0x0] + " H " + _0x278548[0x1]);
            _0x3793d7.schedule(_0x278548[0x1] + " " + _0x278548[0x0] + " * * *", async () => {
              await _0x478a94.groupSettingUpdate(_0x5989f9[_0x2874d7].group_id, 'announcement');
              _0x478a94.sendMessage(_0x5989f9[_0x2874d7].group_id, {
                'image': {
                  'url': "./files/chrono.webp"
                },
                'caption': "Hello, it's time to close the group; sayonara."
              });
            }, {
              'timezone': "Africa/Nairobi"
            });
          }
          if (_0x5989f9[_0x2874d7].unmute_at != null) {
            let _0x1fbc89 = _0x5989f9[_0x2874d7].unmute_at.split(':');
            console.log("etablissement d'un autounmute pour " + _0x1fbc89[0x0] + " H " + _0x1fbc89[0x1] + " ");
            _0x3793d7.schedule(_0x1fbc89[0x1] + " " + _0x1fbc89[0x0] + " * * *", async () => {
              await _0x478a94.groupSettingUpdate(_0x5989f9[_0x2874d7].group_id, "not_announcement");
              _0x478a94.sendMessage(_0x5989f9[_0x2874d7].group_id, {
                'image': {
                  'url': "./files/chrono.webp"
                },
                'caption': "Good morning; It's time to open the group."
              });
            }, {
              'timezone': "Africa/Nairobi"
            });
          }
        }
      } else {
        console.log("Les crons n'ont pas été activés");
      }
      return;
    }
    _0x478a94.ev.on("contacts.upsert", async _0x2853a9 => {
      const _0x2d31dc = _0x48feef => {
        for (const _0x5ab2f8 of _0x48feef) {
          if (store.contacts[_0x5ab2f8.id]) {
            Object.assign(store.contacts[_0x5ab2f8.id], _0x5ab2f8);
          } else {
            store.contacts[_0x5ab2f8.id] = _0x5ab2f8;
          }
        }
        return;
      };
      _0x2d31dc(_0x2853a9);
    });
    _0x478a94.ev.on("connection.update", async _0x5ea9b1 => {
      const {
        lastDisconnect: _0x278276,
        connection: _0x10a47f
      } = _0x5ea9b1;
      if (_0x10a47f === 'connecting') {
        console.log("ℹ️ Bmw is connecting...");
      } else {
        if (_0x10a47f === "open") {
          console.log("✅ Bmw Connected to WhatsApp! ☺️");
          console.log('--');
          0x0;
          await baileys_1.delay(0xc8);
          console.log("------");
          0x0;
          await baileys_1.delay(0x12c);
          console.log("------------------/-----");
          console.log("Bmw Md is Online 🕸\n\n");
          console.log("Loading Bmw Commands ...\n");
          fs.readdirSync(__dirname + "/scs").forEach(_0x5ce57f => {
            if (path.extname(_0x5ce57f).toLowerCase() == ".js") {
              try {
                require(__dirname + "/scs/" + _0x5ce57f);
                console.log(_0x5ce57f + " Installed Successfully✔️");
              } catch (_0x25d28f) {
                console.log(_0x5ce57f + " could not be installed due to : " + _0x25d28f);
              }
              0x0;
              baileys_1.delay(0x12c);
            }
          });
          0x0;
          baileys_1.delay(0x2bc);
          var _0x212df7;
          if (conf.MODE.toLocaleLowerCase() === 'yes') {
            _0x212df7 = "public";
          } else if (conf.MODE.toLocaleLowerCase() === 'no') {
            _0x212df7 = "private";
          } else {
            _0x212df7 = "undefined";
          }
          console.log("Commands Installation Completed ✅");
          await _0x4d905a();
          if (conf.DP.toLowerCase() === "yes") {
            let _0x44c09f = " ⁠⁠⁠⁠\n╭─────────────━┈⊷ \n│🌏 *ᴀɪ ɪs ᴄᴏɴɴᴇᴄᴛᴇᴅ*\n╰─────────────━┈⊷\n│💫 ᴘʀᴇғɪx: *[ " + prefixe + " ]*\n│⭕ ᴍᴏᴅᴇ: *" + _0x212df7 + "*\n│📍 ᴠᴇʀꜱɪᴏɴ: *6.0.3*\n│🤖 ʙᴏᴛ ɴᴀᴍᴇ: *ʙᴍᴡ ᴍᴅ*\n│👨‍💻 ᴏᴡɴᴇʀ : *sɪʀ ɪʙʀᴀʜɪᴍ*\n╰─────────────━┈⊷\n*Join Whatsapp Channel For Updates*\n> https://whatsapp.com/channel/0029VaZuGSxEawdxZK9CzM0Y\n                \n                \n                 ";
            await _0x478a94.sendMessage(_0x478a94.user.id, {
              'text': _0x44c09f
            });
          }
        } else {
          if (_0x10a47f == 'close') {
            let _0x1c9f04 = new boom_1.Boom(_0x278276?.["error"])?.["output"]['statusCode'];
            if (_0x1c9f04 === baileys_1.DisconnectReason.badSession) {
              console.log("Session id error, rescan again...");
            } else {
              if (_0x1c9f04 === baileys_1.DisconnectReason.connectionClosed) {
                console.log("!!! connexion fermée, reconnexion en cours ...");
                _0x53cae9();
              } else {
                if (_0x1c9f04 === baileys_1.DisconnectReason.connectionLost) {
                  console.log("connection error 😞 ,,, trying to reconnect... ");
                  _0x53cae9();
                } else {
                  if (_0x1c9f04 === baileys_1.DisconnectReason?.["connectionReplaced"]) {
                    console.log("connexion réplacée ,,, une sesssion est déjà ouverte veuillez la fermer svp !!!");
                  } else {
                    if (_0x1c9f04 === baileys_1.DisconnectReason.loggedOut) {
                      console.log("vous êtes déconnecté,,, veuillez rescanner le code qr svp");
                    } else {
                      if (_0x1c9f04 === baileys_1.DisconnectReason.restartRequired) {
                        console.log("redémarrage en cours ▶️");
                        _0x53cae9();
                      } else {
                        console.log("redemarrage sur le coup de l'erreur  ", _0x1c9f04);
                        const {
                          exec: _0x5399db
                        } = require("child_process");
                        _0x5399db("pm2 restart all");
                      }
                    }
                  }
                }
              }
            }
            console.log("hum " + _0x10a47f);
            _0x53cae9();
          }
        }
      }
    });
    _0x478a94.ev.on("creds.update", _0x36d22e);
    _0x478a94.downloadAndSaveMediaMessage = async (_0x3b3db1, _0x3a6475 = '', _0xdbd3b3 = true) => {
      let _0x2360bc = _0x3b3db1.msg ? _0x3b3db1.msg : _0x3b3db1;
      let _0x5a199f = (_0x3b3db1.msg || _0x3b3db1).mimetype || '';
      let _0x2684d6 = _0x3b3db1.mtype ? _0x3b3db1.mtype.replace(/Message/gi, '') : _0x5a199f.split('/')[0x0];
      0x0;
      const _0x545754 = await baileys_1.downloadContentFromMessage(_0x2360bc, _0x2684d6);
      let _0x45daaa = Buffer.from([]);
      for await (const _0x582965 of _0x545754) {
        _0x45daaa = Buffer.concat([_0x45daaa, _0x582965]);
      }
      let _0x14614a = await FileType.fromBuffer(_0x45daaa);
      let _0x12aa84 = './' + _0x3a6475 + '.' + _0x14614a.ext;
      await fs.writeFileSync(_0x12aa84, _0x45daaa);
      return _0x12aa84;
    };
    _0x478a94.awaitForMessage = async (_0x1573d9 = {}) => {
      return new Promise((_0x300d9e, _0x2f86e9) => {
        if (typeof _0x1573d9 !== "object") {
          _0x2f86e9(new Error("Options must be an object"));
        }
        if (typeof _0x1573d9.sender !== "string") {
          _0x2f86e9(new Error("Sender must be a string"));
        }
        if (typeof _0x1573d9.chatJid !== 'string') {
          _0x2f86e9(new Error("ChatJid must be a string"));
        }
        if (_0x1573d9.timeout && typeof _0x1573d9.timeout !== "number") {
          _0x2f86e9(new Error("Timeout must be a number"));
        }
        if (_0x1573d9.filter && typeof _0x1573d9.filter !== "function") {
          _0x2f86e9(new Error("Filter must be a function"));
        }
        const _0x1e8663 = _0x1573d9?.['timeout'] || undefined;
        const _0x24e239 = _0x1573d9?.['filter'] || (() => true);
        let _0x2ae0a6 = undefined;
        let _0x38788a = _0x3a1942 => {
          let {
            type: _0x7ed1c9,
            messages: _0x578eef
          } = _0x3a1942;
          if (_0x7ed1c9 == 'notify') {
            for (let _0x11811a of _0x578eef) {
              const _0x393a09 = _0x11811a.key.fromMe;
              const _0x4ab639 = _0x11811a.key.remoteJid;
              const _0x36d818 = _0x4ab639.endsWith("@g.us");
              const _0x5de1f3 = _0x4ab639 == "status@broadcast";
              const _0x6e4eb1 = _0x393a09 ? _0x478a94.user.id.replace(/:.*@/g, '@') : _0x36d818 || _0x5de1f3 ? _0x11811a.key.participant.replace(/:.*@/g, '@') : _0x4ab639;
              if (_0x6e4eb1 == _0x1573d9.sender && _0x4ab639 == _0x1573d9.chatJid && _0x24e239(_0x11811a)) {
                _0x478a94.ev.off('messages.upsert', _0x38788a);
                clearTimeout(_0x2ae0a6);
                _0x300d9e(_0x11811a);
              }
            }
          }
        };
        _0x478a94.ev.on("messages.upsert", _0x38788a);
        if (_0x1e8663) {
          _0x2ae0a6 = setTimeout(() => {
            _0x478a94.ev.off("messages.upsert", _0x38788a);
            _0x2f86e9(new Error('Timeout'));
          }, _0x1e8663);
        }
      });
    };
    return _0x478a94;
  }
  let _0x377c87 = require.resolve(__filename);
  fs.watchFile(_0x377c87, () => {
    fs.unwatchFile(_0x377c87);
    console.log("mise à jour " + __filename);
    delete require.cache[_0x377c87];
    require(_0x377c87);
  });
  _0x53cae9();
}, 0x1388);
